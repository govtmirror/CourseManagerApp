//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserting(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserted(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updating(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updated(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleting(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleted(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Validate(global::LightSwitchApplication.Category entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updating(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updated(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Validate(global::LightSwitchApplication.Course entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Inserting(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Inserted(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Updating(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Updated(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Deleting(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Deleted(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Validate(global::LightSwitchApplication.Instructor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Inserting(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Inserted(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Updating(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Updated(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Deleting(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Deleted(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Validate(global::LightSwitchApplication.Section entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Inserting(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Inserted(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Updating(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Updated(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Deleting(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Deleted(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Validate(global::LightSwitchApplication.Enrollment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Inserting(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Inserted(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Updating(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Updated(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Deleting(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Deleted(global::LightSwitchApplication.Student entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Validate(global::LightSwitchApplication.Student entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Inserting(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Inserted(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Updating(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Updated(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Deleting(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Deleted(global::LightSwitchApplication.CourseCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Validate(global::LightSwitchApplication.CourseCategory entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Students_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseCategories_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_Executing(global::System.Nullable<int> StudentId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_PreprocessQuery(global::System.Nullable<int> StudentId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_Executed(global::System.Nullable<int> StudentId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_ExecuteFailed(global::System.Nullable<int> StudentId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByCategory_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByCategory_Executing(global::System.Nullable<int> CategoryId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByCategory_PreprocessQuery(global::System.Nullable<int> CategoryId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByCategory_Executed(global::System.Nullable<int> CategoryId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByCategory_ExecuteFailed(global::System.Nullable<int> CategoryId, global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>
                __CategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>(
                    "Categories",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Validate);
            private static bool __Categories_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Categories_CanInsert(ref result);
                return result;
            }
            private static bool __Categories_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Categories_CanUpdate(ref result);
                return result;
            }
            private static bool __Categories_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Categories_CanDelete(ref result);
                return result;
            }
            private static bool __Categories_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Categories_CanRead(ref result);
                return result;
            }
            private static void __Categories_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Inserting(e);
            }
            private static void __Categories_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Inserted(e);
            }
            private static void __Categories_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Updating(e);
            }
            private static void __Categories_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Updated(e);
            }
            private static void __Categories_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Deleting(e);
            }
            private static void __Categories_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Deleted(e);
            }
            private static void __Categories_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Category e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Categories_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __CoursesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Validate);
            private static bool __Courses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanInsert(ref result);
                return result;
            }
            private static bool __Courses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanUpdate(ref result);
                return result;
            }
            private static bool __Courses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanDelete(ref result);
                return result;
            }
            private static bool __Courses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanRead(ref result);
                return result;
            }
            private static void __Courses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserting(e);
            }
            private static void __Courses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserted(e);
            }
            private static void __Courses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updating(e);
            }
            private static void __Courses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updated(e);
            }
            private static void __Courses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleting(e);
            }
            private static void __Courses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleted(e);
            }
            private static void __Courses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Courses_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __InstructorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Validate);
            private static bool __Instructors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanInsert(ref result);
                return result;
            }
            private static bool __Instructors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanUpdate(ref result);
                return result;
            }
            private static bool __Instructors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanDelete(ref result);
                return result;
            }
            private static bool __Instructors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanRead(ref result);
                return result;
            }
            private static void __Instructors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Inserting(e);
            }
            private static void __Instructors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Inserted(e);
            }
            private static void __Instructors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Updating(e);
            }
            private static void __Instructors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Updated(e);
            }
            private static void __Instructors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Deleting(e);
            }
            private static void __Instructors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Deleted(e);
            }
            private static void __Instructors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Instructors_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __SectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Validate);
            private static bool __Sections_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanInsert(ref result);
                return result;
            }
            private static bool __Sections_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanUpdate(ref result);
                return result;
            }
            private static bool __Sections_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanDelete(ref result);
                return result;
            }
            private static bool __Sections_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanRead(ref result);
                return result;
            }
            private static void __Sections_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Inserting(e);
            }
            private static void __Sections_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Inserted(e);
            }
            private static void __Sections_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Updating(e);
            }
            private static void __Sections_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Updated(e);
            }
            private static void __Sections_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Deleting(e);
            }
            private static void __Sections_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Deleted(e);
            }
            private static void __Sections_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>
                __EnrollmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>(
                    "Enrollments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Validate);
            private static bool __Enrollments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanInsert(ref result);
                return result;
            }
            private static bool __Enrollments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanUpdate(ref result);
                return result;
            }
            private static bool __Enrollments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanDelete(ref result);
                return result;
            }
            private static bool __Enrollments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanRead(ref result);
                return result;
            }
            private static void __Enrollments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Inserting(e);
            }
            private static void __Enrollments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Inserted(e);
            }
            private static void __Enrollments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Updating(e);
            }
            private static void __Enrollments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Updated(e);
            }
            private static void __Enrollments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Deleting(e);
            }
            private static void __Enrollments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Deleted(e);
            }
            private static void __Enrollments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Enrollments_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>
                __StudentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>(
                    "Students",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Validate);
            private static bool __Students_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Students_CanInsert(ref result);
                return result;
            }
            private static bool __Students_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Students_CanUpdate(ref result);
                return result;
            }
            private static bool __Students_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Students_CanDelete(ref result);
                return result;
            }
            private static bool __Students_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Students_CanRead(ref result);
                return result;
            }
            private static void __Students_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Inserting(e);
            }
            private static void __Students_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Inserted(e);
            }
            private static void __Students_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Updating(e);
            }
            private static void __Students_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Updated(e);
            }
            private static void __Students_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Deleting(e);
            }
            private static void __Students_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e)
            {
                d.Students_Deleted(e);
            }
            private static void __Students_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Student e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Students_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>
                __CourseCategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>(
                    "CourseCategories",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Validate);
            private static bool __CourseCategories_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseCategories_CanInsert(ref result);
                return result;
            }
            private static bool __CourseCategories_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseCategories_CanUpdate(ref result);
                return result;
            }
            private static bool __CourseCategories_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseCategories_CanDelete(ref result);
                return result;
            }
            private static bool __CourseCategories_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseCategories_CanRead(ref result);
                return result;
            }
            private static void __CourseCategories_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Inserting(e);
            }
            private static void __CourseCategories_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Inserted(e);
            }
            private static void __CourseCategories_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Updating(e);
            }
            private static void __CourseCategories_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Updated(e);
            }
            private static void __CourseCategories_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Deleting(e);
            }
            private static void __CourseCategories_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e)
            {
                d.CourseCategories_Deleted(e);
            }
            private static void __CourseCategories_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseCategory e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CourseCategories_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>
                __Categories_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>(
                    "Categories_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_Single_PreprocessQuery);
            private static bool __Categories_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Categories_Single_CanExecute(ref r);
                return r;
            }
            private static void __Categories_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Categories_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category>)args[1]);
            }
            private static void __Categories_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Categories_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Categories_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Category>)args[1];
                d.Categories_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>
                __Categories_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>(
                    "Categories_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_SingleOrDefault_PreprocessQuery);
            private static bool __Categories_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Categories_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Categories_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Categories_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category>)args[1]);
            }
            private static void __Categories_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Categories_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Categories_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Category>)args[1];
                d.Categories_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>
                __Categories_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Category>(
                    "Categories_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Categories_All_PreprocessQuery);
            private static bool __Categories_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Categories_All_CanExecute(ref r);
                return r;
            }
            private static void __Categories_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_All_Executing();
            }
            private static void __Categories_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Categories_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Category>)args[0]);
            }
            private static void __Categories_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Categories_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Categories_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Category> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Category>)args[0];
                d.Categories_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __Courses_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Single_PreprocessQuery);
            private static bool __Courses_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Courses_Single_CanExecute(ref r);
                return r;
            }
            private static void __Courses_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Courses_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course>)args[1]);
            }
            private static void __Courses_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Courses_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Courses_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Course>)args[1];
                d.Courses_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __Courses_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_SingleOrDefault_PreprocessQuery);
            private static bool __Courses_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Courses_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Courses_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Courses_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course>)args[1]);
            }
            private static void __Courses_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Courses_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Courses_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Course>)args[1];
                d.Courses_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __Courses_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_All_PreprocessQuery);
            private static bool __Courses_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Courses_All_CanExecute(ref r);
                return r;
            }
            private static void __Courses_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_All_Executing();
            }
            private static void __Courses_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Courses_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course>)args[0]);
            }
            private static void __Courses_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Courses_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Courses_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Course>)args[0];
                d.Courses_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __Instructors_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Single_PreprocessQuery);
            private static bool __Instructors_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Instructors_Single_CanExecute(ref r);
                return r;
            }
            private static void __Instructors_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Instructors_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor>)args[1]);
            }
            private static void __Instructors_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Instructors_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Instructors_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor>)args[1];
                d.Instructors_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __Instructors_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_SingleOrDefault_PreprocessQuery);
            private static bool __Instructors_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Instructors_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Instructors_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Instructors_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor>)args[1]);
            }
            private static void __Instructors_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Instructors_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Instructors_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor>)args[1];
                d.Instructors_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __Instructors_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_PreprocessQuery);
            private static bool __Instructors_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Instructors_All_CanExecute(ref r);
                return r;
            }
            private static void __Instructors_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_All_Executing();
            }
            private static void __Instructors_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor>)args[0]);
            }
            private static void __Instructors_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Instructors_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Instructors_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor>)args[0];
                d.Instructors_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __Sections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Single_PreprocessQuery);
            private static bool __Sections_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Sections_Single_CanExecute(ref r);
                return r;
            }
            private static void __Sections_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Sections_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __Sections_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Sections_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Sections_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.Sections_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __Sections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_SingleOrDefault_PreprocessQuery);
            private static bool __Sections_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Sections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Sections_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Sections_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __Sections_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Sections_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Sections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.Sections_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __Sections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_PreprocessQuery);
            private static bool __Sections_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Sections_All_CanExecute(ref r);
                return r;
            }
            private static void __Sections_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_All_Executing();
            }
            private static void __Sections_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[0]);
            }
            private static void __Sections_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Sections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Sections_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[0];
                d.Sections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>
                __Enrollments_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>(
                    "Enrollments_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Single_PreprocessQuery);
            private static bool __Enrollments_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Enrollments_Single_CanExecute(ref r);
                return r;
            }
            private static void __Enrollments_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Enrollments_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment>)args[1]);
            }
            private static void __Enrollments_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Enrollments_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Enrollments_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment>)args[1];
                d.Enrollments_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>
                __Enrollments_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>(
                    "Enrollments_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_SingleOrDefault_PreprocessQuery);
            private static bool __Enrollments_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Enrollments_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Enrollments_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Enrollments_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment>)args[1]);
            }
            private static void __Enrollments_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Enrollments_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Enrollments_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment>)args[1];
                d.Enrollments_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>
                __Enrollments_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>(
                    "Enrollments_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_All_PreprocessQuery);
            private static bool __Enrollments_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Enrollments_All_CanExecute(ref r);
                return r;
            }
            private static void __Enrollments_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_All_Executing();
            }
            private static void __Enrollments_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Enrollments_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Enrollment>)args[0]);
            }
            private static void __Enrollments_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Enrollments_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Enrollments_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Enrollment>)args[0];
                d.Enrollments_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>
                __Students_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>(
                    "Students_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_Single_PreprocessQuery);
            private static bool __Students_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Students_Single_CanExecute(ref r);
                return r;
            }
            private static void __Students_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Students_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student>)args[1]);
            }
            private static void __Students_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Students_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Students_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Student>)args[1];
                d.Students_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>
                __Students_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>(
                    "Students_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_SingleOrDefault_PreprocessQuery);
            private static bool __Students_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Students_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Students_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Students_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student>)args[1]);
            }
            private static void __Students_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Students_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Students_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Student>)args[1];
                d.Students_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>
                __Students_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Student>(
                    "Students_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Students_All_PreprocessQuery);
            private static bool __Students_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Students_All_CanExecute(ref r);
                return r;
            }
            private static void __Students_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_All_Executing();
            }
            private static void __Students_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Students_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Student>)args[0]);
            }
            private static void __Students_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Students_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Students_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Student> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Student>)args[0];
                d.Students_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>
                __CourseCategories_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>(
                    "CourseCategories_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_Single_PreprocessQuery);
            private static bool __CourseCategories_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CourseCategories_Single_CanExecute(ref r);
                return r;
            }
            private static void __CourseCategories_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CourseCategories_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory>)args[1]);
            }
            private static void __CourseCategories_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CourseCategories_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CourseCategories_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory>)args[1];
                d.CourseCategories_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>
                __CourseCategories_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>(
                    "CourseCategories_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_SingleOrDefault_PreprocessQuery);
            private static bool __CourseCategories_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CourseCategories_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __CourseCategories_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CourseCategories_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory>)args[1]);
            }
            private static void __CourseCategories_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CourseCategories_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CourseCategories_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory>)args[1];
                d.CourseCategories_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>
                __CourseCategories_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseCategory>(
                    "CourseCategories_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseCategories_All_PreprocessQuery);
            private static bool __CourseCategories_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CourseCategories_All_CanExecute(ref r);
                return r;
            }
            private static void __CourseCategories_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_All_Executing();
            }
            private static void __CourseCategories_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CourseCategories_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CourseCategory>)args[0]);
            }
            private static void __CourseCategories_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CourseCategories_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CourseCategories_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CourseCategory>)args[0];
                d.CourseCategories_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __AvailableSectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "AvailableSections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_PreprocessQuery);
            private static bool __AvailableSections_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AvailableSections_CanExecute(ref r);
                return r;
            }
            private static void __AvailableSections_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailableSections_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __AvailableSections_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailableSections_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __AvailableSections_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AvailableSections_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __AvailableSections_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.AvailableSections_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __SectionsByCategoryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "SectionsByCategory",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByCategory_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByCategory_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByCategory_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByCategory_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByCategory_PreprocessQuery);
            private static bool __SectionsByCategory_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SectionsByCategory_CanExecute(ref r);
                return r;
            }
            private static void __SectionsByCategory_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByCategory_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SectionsByCategory_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByCategory_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __SectionsByCategory_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SectionsByCategory_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SectionsByCategory_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.SectionsByCategory_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
