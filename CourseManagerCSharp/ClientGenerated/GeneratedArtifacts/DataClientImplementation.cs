//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Category
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Category :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Category.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.ComponentModel.DataAnnotations.Association("CourseCategory_Category", "Id", "CourseCategory_Category")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseCategory> CourseCategories
        {
            get
            {
                if (this._CourseCategories == null)
                {
                    this._CourseCategories = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseCategory>(this, "CourseCategories", this.FilterCourseCategories, this.AttachCourseCategories, this.DetachCourseCategories);
                }
                return this._CourseCategories;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseCategory> _CourseCategories;
        private void AttachCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            entity.Category = this;
        }
        private void DetachCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            entity.Category = null;
        }
        private bool FilterCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            return global::System.Object.Equals(entity.CourseCategory_Category, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Category.DetailsClass.IImplementation.CourseCategories
        {
            get
            {
                return this.CourseCategories;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Course
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Course :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Course.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._Description = value;
                    this.RaiseDataMemberChanged("Description");
                }
            }
        }
        private string _Description;
        
        [global::System.ComponentModel.DataAnnotations.Association("Section_Course", "Id", "Section_Course")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Section> Sections
        {
            get
            {
                if (this._Sections == null)
                {
                    this._Sections = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Section>(this, "Sections", this.FilterSections, this.AttachSections, this.DetachSections);
                }
                return this._Sections;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Section> _Sections;
        private void AttachSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            entity.Course = this;
        }
        private void DetachSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            entity.Course = null;
        }
        private bool FilterSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            return global::System.Object.Equals(entity.Section_Course, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.Sections
        {
            get
            {
                return this.Sections;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("CourseCategory_Course", "Id", "CourseCategory_Course")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseCategory> CourseCategories
        {
            get
            {
                if (this._CourseCategories == null)
                {
                    this._CourseCategories = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseCategory>(this, "CourseCategories", this.FilterCourseCategories, this.AttachCourseCategories, this.DetachCourseCategories);
                }
                return this._CourseCategories;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseCategory> _CourseCategories;
        private void AttachCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            entity.Course = this;
        }
        private void DetachCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            entity.Course = null;
        }
        private bool FilterCourseCategories(global::LightSwitchApplication.Implementation.CourseCategory entity)
        {
            return global::System.Object.Equals(entity.CourseCategory_Course, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.CourseCategories
        {
            get
            {
                return this.CourseCategories;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Instructor
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Instructor :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Instructor.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if (this._LastName != value)
                {
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._LastName = value;
                    this.RaiseDataMemberChanged("LastName");
                }
            }
        }
        private string _LastName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public byte[] Picture
        {
            get
            {
                return this._Picture;
            }
            set
            {
                if (this._Picture != value)
                {
                    this.RaiseDataMemberChanging("Picture");
                    this.ValidateProperty("Picture", value);
                    this._Picture = value;
                    this.RaiseDataMemberChanged("Picture");
                }
            }
        }
        private byte[] _Picture;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                if (this._Phone != value)
                {
                    this.RaiseDataMemberChanging("Phone");
                    this.ValidateProperty("Phone", value);
                    this._Phone = value;
                    this.RaiseDataMemberChanged("Phone");
                }
            }
        }
        private string _Phone;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Office
        {
            get
            {
                return this._Office;
            }
            set
            {
                if (this._Office != value)
                {
                    this.RaiseDataMemberChanging("Office");
                    this.ValidateProperty("Office", value);
                    this._Office = value;
                    this.RaiseDataMemberChanged("Office");
                }
            }
        }
        private string _Office;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Bio
        {
            get
            {
                return this._Bio;
            }
            set
            {
                if (this._Bio != value)
                {
                    this.RaiseDataMemberChanging("Bio");
                    this.ValidateProperty("Bio", value);
                    this._Bio = value;
                    this.RaiseDataMemberChanged("Bio");
                }
            }
        }
        private string _Bio;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime CreatedTime
        {
            get
            {
                return this._CreatedTime;
            }
            set
            {
                if (this._CreatedTime != value)
                {
                    this.RaiseDataMemberChanging("CreatedTime");
                    this.ValidateProperty("CreatedTime", value);
                    this._CreatedTime = value;
                    this.RaiseDataMemberChanged("CreatedTime");
                }
            }
        }
        private global::System.DateTime _CreatedTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                if (this._UpdatedTime != value)
                {
                    this.RaiseDataMemberChanging("UpdatedTime");
                    this.ValidateProperty("UpdatedTime", value);
                    this._UpdatedTime = value;
                    this.RaiseDataMemberChanged("UpdatedTime");
                }
            }
        }
        private global::System.DateTime _UpdatedTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string UpdatedBy
        {
            get
            {
                return this._UpdatedBy;
            }
            set
            {
                if (this._UpdatedBy != value)
                {
                    this.RaiseDataMemberChanging("UpdatedBy");
                    this.ValidateProperty("UpdatedBy", value);
                    this._UpdatedBy = value;
                    this.RaiseDataMemberChanged("UpdatedBy");
                }
            }
        }
        private string _UpdatedBy;
        
        [global::System.ComponentModel.DataAnnotations.Association("Section_Instructor", "Id", "Section_Instructor")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Section> Sections
        {
            get
            {
                if (this._Sections == null)
                {
                    this._Sections = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Section>(this, "Sections", this.FilterSections, this.AttachSections, this.DetachSections);
                }
                return this._Sections;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Section> _Sections;
        private void AttachSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            entity.Instructor = this;
        }
        private void DetachSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            entity.Instructor = null;
        }
        private bool FilterSections(global::LightSwitchApplication.Implementation.Section entity)
        {
            return global::System.Object.Equals(entity.Section_Instructor, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Instructor.DetailsClass.IImplementation.Sections
        {
            get
            {
                return this.Sections;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Section
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Section :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Section.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SectionID
        {
            get
            {
                return this._SectionID;
            }
            set
            {
                if (this._SectionID != value)
                {
                    this.RaiseDataMemberChanging("SectionID");
                    this.ValidateProperty("SectionID", value);
                    this._SectionID = value;
                    this.RaiseDataMemberChanged("SectionID");
                }
            }
        }
        private string _SectionID;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int MaxEnrollment
        {
            get
            {
                return this._MaxEnrollment;
            }
            set
            {
                if (this._MaxEnrollment != value)
                {
                    this.RaiseDataMemberChanging("MaxEnrollment");
                    this.ValidateProperty("MaxEnrollment", value);
                    this._MaxEnrollment = value;
                    this.RaiseDataMemberChanged("MaxEnrollment");
                }
            }
        }
        private int _MaxEnrollment;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int AcademicYear
        {
            get
            {
                return this._AcademicYear;
            }
            set
            {
                if (this._AcademicYear != value)
                {
                    this.RaiseDataMemberChanging("AcademicYear");
                    this.ValidateProperty("AcademicYear", value);
                    this._AcademicYear = value;
                    this.RaiseDataMemberChanged("AcademicYear");
                }
            }
        }
        private int _AcademicYear;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string AcademicQuarter
        {
            get
            {
                return this._AcademicQuarter;
            }
            set
            {
                if (this._AcademicQuarter != value)
                {
                    this.RaiseDataMemberChanging("AcademicQuarter");
                    this.ValidateProperty("AcademicQuarter", value);
                    this._AcademicQuarter = value;
                    this.RaiseDataMemberChanged("AcademicQuarter");
                }
            }
        }
        private string _AcademicQuarter;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string MeetingDays
        {
            get
            {
                return this._MeetingDays;
            }
            set
            {
                if (this._MeetingDays != value)
                {
                    this.RaiseDataMemberChanging("MeetingDays");
                    this.ValidateProperty("MeetingDays", value);
                    this._MeetingDays = value;
                    this.RaiseDataMemberChanged("MeetingDays");
                }
            }
        }
        private string _MeetingDays;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime MeetingTime
        {
            get
            {
                return this._MeetingTime;
            }
            set
            {
                if (this._MeetingTime != value)
                {
                    this.RaiseDataMemberChanging("MeetingTime");
                    this.ValidateProperty("MeetingTime", value);
                    this._MeetingTime = value;
                    this.RaiseDataMemberChanged("MeetingTime");
                }
            }
        }
        private global::System.DateTime _MeetingTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this.RaiseDataMemberChanging("StartDate");
                    this.ValidateProperty("StartDate", value);
                    this._StartDate = value;
                    this.RaiseDataMemberChanged("StartDate");
                }
            }
        }
        private global::System.DateTime _StartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if (this._EndDate != value)
                {
                    this.RaiseDataMemberChanging("EndDate");
                    this.ValidateProperty("EndDate", value);
                    this._EndDate = value;
                    this.RaiseDataMemberChanged("EndDate");
                }
            }
        }
        private global::System.DateTime _EndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Section_Course
        {
            get
            {
                return this._Section_Course;
            }
            set
            {
                if (this._Section_Course != value)
                {
                    this.RaiseDataMemberChanging("Section_Course");
                    this.ValidateProperty("Section_Course", value);
                    this._Section_Course = value;
                    this.RaiseDataMemberChanged("Section_Course");
                }
            }
        }
        private int _Section_Course;
        
        [global::System.ComponentModel.DataAnnotations.Association("Section_Course", "Section_Course", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Course Course
        {
            get
            {
                if (this._Course == null)
                {
                    this._Course = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course>(this, "Course", this.FilterCourse);
                }
                return this._Course.Entity;
            }
            set
            {
                Course previous = this.Course;
                if (previous != value)
                {
                    this.ValidateProperty("Course", value);
                    if (previous != null)
                    {
                        this._Course.Entity = null;
                        previous.Sections.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Section_Course = value.Id;
                    }
                    else
                    {
                        this.Section_Course = default(int);
                    }
                    this._Course.Entity = value;
                    if (value != null)
                    {
                        value.Sections.Add(this);
                    }
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course> _Course;
        private bool FilterCourse(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.Id, this.Section_Course);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Section.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::LightSwitchApplication.Implementation.Course)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Section_Instructor
        {
            get
            {
                return this._Section_Instructor;
            }
            set
            {
                if (this._Section_Instructor != value)
                {
                    this.RaiseDataMemberChanging("Section_Instructor");
                    this.ValidateProperty("Section_Instructor", value);
                    this._Section_Instructor = value;
                    this.RaiseDataMemberChanged("Section_Instructor");
                }
            }
        }
        private int _Section_Instructor;
        
        [global::System.ComponentModel.DataAnnotations.Association("Section_Instructor", "Section_Instructor", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Instructor Instructor
        {
            get
            {
                if (this._Instructor == null)
                {
                    this._Instructor = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Instructor>(this, "Instructor", this.FilterInstructor);
                }
                return this._Instructor.Entity;
            }
            set
            {
                Instructor previous = this.Instructor;
                if (previous != value)
                {
                    this.ValidateProperty("Instructor", value);
                    if (previous != null)
                    {
                        this._Instructor.Entity = null;
                        previous.Sections.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Section_Instructor = value.Id;
                    }
                    else
                    {
                        this.Section_Instructor = default(int);
                    }
                    this._Instructor.Entity = value;
                    if (value != null)
                    {
                        value.Sections.Add(this);
                    }
                    this.RaisePropertyChanged("Instructor");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Instructor> _Instructor;
        private bool FilterInstructor(global::LightSwitchApplication.Implementation.Instructor entity)
        {
            return global::System.Object.Equals(entity.Id, this.Section_Instructor);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Section.DetailsClass.IImplementation.Instructor
        {
            get
            {
                return this.Instructor;
            }
            set
            {
                this.Instructor = (global::LightSwitchApplication.Implementation.Instructor)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Enrollment_Section", "Id", "Enrollment_Section")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Enrollment> Enrollments
        {
            get
            {
                if (this._Enrollments == null)
                {
                    this._Enrollments = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Enrollment>(this, "Enrollments", this.FilterEnrollments, this.AttachEnrollments, this.DetachEnrollments);
                }
                return this._Enrollments;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Enrollment> _Enrollments;
        private void AttachEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            entity.Section = this;
        }
        private void DetachEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            entity.Section = null;
        }
        private bool FilterEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            return global::System.Object.Equals(entity.Enrollment_Section, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Section.DetailsClass.IImplementation.Enrollments
        {
            get
            {
                return this.Enrollments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Enrollment
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Enrollment :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Enrollment_Section
        {
            get
            {
                return this._Enrollment_Section;
            }
            set
            {
                if (this._Enrollment_Section != value)
                {
                    this.RaiseDataMemberChanging("Enrollment_Section");
                    this.ValidateProperty("Enrollment_Section", value);
                    this._Enrollment_Section = value;
                    this.RaiseDataMemberChanged("Enrollment_Section");
                }
            }
        }
        private int _Enrollment_Section;
        
        [global::System.ComponentModel.DataAnnotations.Association("Enrollment_Section", "Enrollment_Section", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Section Section
        {
            get
            {
                if (this._Section == null)
                {
                    this._Section = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Section>(this, "Section", this.FilterSection);
                }
                return this._Section.Entity;
            }
            set
            {
                Section previous = this.Section;
                if (previous != value)
                {
                    this.ValidateProperty("Section", value);
                    if (previous != null)
                    {
                        this._Section.Entity = null;
                        previous.Enrollments.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Enrollment_Section = value.Id;
                    }
                    else
                    {
                        this.Enrollment_Section = default(int);
                    }
                    this._Section.Entity = value;
                    if (value != null)
                    {
                        value.Enrollments.Add(this);
                    }
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Section> _Section;
        private bool FilterSection(global::LightSwitchApplication.Implementation.Section entity)
        {
            return global::System.Object.Equals(entity.Id, this.Enrollment_Section);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation.Section
        {
            get
            {
                return this.Section;
            }
            set
            {
                this.Section = (global::LightSwitchApplication.Implementation.Section)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Enrollment_Student
        {
            get
            {
                return this._Enrollment_Student;
            }
            set
            {
                if (this._Enrollment_Student != value)
                {
                    this.RaiseDataMemberChanging("Enrollment_Student");
                    this.ValidateProperty("Enrollment_Student", value);
                    this._Enrollment_Student = value;
                    this.RaiseDataMemberChanged("Enrollment_Student");
                }
            }
        }
        private int _Enrollment_Student;
        
        [global::System.ComponentModel.DataAnnotations.Association("Enrollment_Student", "Enrollment_Student", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Student Student
        {
            get
            {
                if (this._Student == null)
                {
                    this._Student = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Student>(this, "Student", this.FilterStudent);
                }
                return this._Student.Entity;
            }
            set
            {
                Student previous = this.Student;
                if (previous != value)
                {
                    this.ValidateProperty("Student", value);
                    if (previous != null)
                    {
                        this._Student.Entity = null;
                        previous.Enrollments.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Enrollment_Student = value.Id;
                    }
                    else
                    {
                        this.Enrollment_Student = default(int);
                    }
                    this._Student.Entity = value;
                    if (value != null)
                    {
                        value.Enrollments.Add(this);
                    }
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Student> _Student;
        private bool FilterStudent(global::LightSwitchApplication.Implementation.Student entity)
        {
            return global::System.Object.Equals(entity.Id, this.Enrollment_Student);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation.Student
        {
            get
            {
                return this.Student;
            }
            set
            {
                this.Student = (global::LightSwitchApplication.Implementation.Student)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Student
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Student :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Student.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if (this._LastName != value)
                {
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._LastName = value;
                    this.RaiseDataMemberChanged("LastName");
                }
            }
        }
        private string _LastName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._Email = value;
                    this.RaiseDataMemberChanged("Email");
                }
            }
        }
        private string _Email;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                if (this._Phone != value)
                {
                    this.RaiseDataMemberChanging("Phone");
                    this.ValidateProperty("Phone", value);
                    this._Phone = value;
                    this.RaiseDataMemberChanged("Phone");
                }
            }
        }
        private string _Phone;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public byte[] Picture
        {
            get
            {
                return this._Picture;
            }
            set
            {
                if (this._Picture != value)
                {
                    this.RaiseDataMemberChanging("Picture");
                    this.ValidateProperty("Picture", value);
                    this._Picture = value;
                    this.RaiseDataMemberChanged("Picture");
                }
            }
        }
        private byte[] _Picture;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Street
        {
            get
            {
                return this._Street;
            }
            set
            {
                if (this._Street != value)
                {
                    this.RaiseDataMemberChanging("Street");
                    this.ValidateProperty("Street", value);
                    this._Street = value;
                    this.RaiseDataMemberChanged("Street");
                }
            }
        }
        private string _Street;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if (this._City != value)
                {
                    this.RaiseDataMemberChanging("City");
                    this.ValidateProperty("City", value);
                    this._City = value;
                    this.RaiseDataMemberChanged("City");
                }
            }
        }
        private string _City;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if (this._State != value)
                {
                    this.RaiseDataMemberChanging("State");
                    this.ValidateProperty("State", value);
                    this._State = value;
                    this.RaiseDataMemberChanged("State");
                }
            }
        }
        private string _State;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Zip
        {
            get
            {
                return this._Zip;
            }
            set
            {
                if (this._Zip != value)
                {
                    this.RaiseDataMemberChanging("Zip");
                    this.ValidateProperty("Zip", value);
                    this._Zip = value;
                    this.RaiseDataMemberChanged("Zip");
                }
            }
        }
        private string _Zip;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime CreatedTime
        {
            get
            {
                return this._CreatedTime;
            }
            set
            {
                if (this._CreatedTime != value)
                {
                    this.RaiseDataMemberChanging("CreatedTime");
                    this.ValidateProperty("CreatedTime", value);
                    this._CreatedTime = value;
                    this.RaiseDataMemberChanged("CreatedTime");
                }
            }
        }
        private global::System.DateTime _CreatedTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                if (this._UpdatedTime != value)
                {
                    this.RaiseDataMemberChanging("UpdatedTime");
                    this.ValidateProperty("UpdatedTime", value);
                    this._UpdatedTime = value;
                    this.RaiseDataMemberChanged("UpdatedTime");
                }
            }
        }
        private global::System.DateTime _UpdatedTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string UpdatedBy
        {
            get
            {
                return this._UpdatedBy;
            }
            set
            {
                if (this._UpdatedBy != value)
                {
                    this.RaiseDataMemberChanging("UpdatedBy");
                    this.ValidateProperty("UpdatedBy", value);
                    this._UpdatedBy = value;
                    this.RaiseDataMemberChanged("UpdatedBy");
                }
            }
        }
        private string _UpdatedBy;
        
        [global::System.ComponentModel.DataAnnotations.Association("Enrollment_Student", "Id", "Enrollment_Student")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Enrollment> Enrollments
        {
            get
            {
                if (this._Enrollments == null)
                {
                    this._Enrollments = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Enrollment>(this, "Enrollments", this.FilterEnrollments, this.AttachEnrollments, this.DetachEnrollments);
                }
                return this._Enrollments;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Enrollment> _Enrollments;
        private void AttachEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            entity.Student = this;
        }
        private void DetachEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            entity.Student = null;
        }
        private bool FilterEnrollments(global::LightSwitchApplication.Implementation.Enrollment entity)
        {
            return global::System.Object.Equals(entity.Enrollment_Student, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Student.DetailsClass.IImplementation.Enrollments
        {
            get
            {
                return this.Enrollments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CourseCategory
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CourseCategory :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CourseCategory_Course
        {
            get
            {
                return this._CourseCategory_Course;
            }
            set
            {
                if (this._CourseCategory_Course != value)
                {
                    this.RaiseDataMemberChanging("CourseCategory_Course");
                    this.ValidateProperty("CourseCategory_Course", value);
                    this._CourseCategory_Course = value;
                    this.RaiseDataMemberChanged("CourseCategory_Course");
                }
            }
        }
        private int _CourseCategory_Course;
        
        [global::System.ComponentModel.DataAnnotations.Association("CourseCategory_Course", "CourseCategory_Course", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Course Course
        {
            get
            {
                if (this._Course == null)
                {
                    this._Course = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course>(this, "Course", this.FilterCourse);
                }
                return this._Course.Entity;
            }
            set
            {
                Course previous = this.Course;
                if (previous != value)
                {
                    this.ValidateProperty("Course", value);
                    if (previous != null)
                    {
                        this._Course.Entity = null;
                        previous.CourseCategories.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CourseCategory_Course = value.Id;
                    }
                    else
                    {
                        this.CourseCategory_Course = default(int);
                    }
                    this._Course.Entity = value;
                    if (value != null)
                    {
                        value.CourseCategories.Add(this);
                    }
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course> _Course;
        private bool FilterCourse(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.Id, this.CourseCategory_Course);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::LightSwitchApplication.Implementation.Course)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CourseCategory_Category
        {
            get
            {
                return this._CourseCategory_Category;
            }
            set
            {
                if (this._CourseCategory_Category != value)
                {
                    this.RaiseDataMemberChanging("CourseCategory_Category");
                    this.ValidateProperty("CourseCategory_Category", value);
                    this._CourseCategory_Category = value;
                    this.RaiseDataMemberChanged("CourseCategory_Category");
                }
            }
        }
        private int _CourseCategory_Category;
        
        [global::System.ComponentModel.DataAnnotations.Association("CourseCategory_Category", "CourseCategory_Category", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Category Category
        {
            get
            {
                if (this._Category == null)
                {
                    this._Category = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Category>(this, "Category", this.FilterCategory);
                }
                return this._Category.Entity;
            }
            set
            {
                Category previous = this.Category;
                if (previous != value)
                {
                    this.ValidateProperty("Category", value);
                    if (previous != null)
                    {
                        this._Category.Entity = null;
                        previous.CourseCategories.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CourseCategory_Category = value.Id;
                    }
                    else
                    {
                        this.CourseCategory_Category = default(int);
                    }
                    this._Category.Entity = value;
                    if (value != null)
                    {
                        value.CourseCategories.Add(this);
                    }
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Category> _Category;
        private bool FilterCategory(global::LightSwitchApplication.Implementation.Category entity)
        {
            return global::System.Object.Equals(entity.Id, this.CourseCategory_Category);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation.Category
        {
            get
            {
                return this.Category;
            }
            set
            {
                this.Category = (global::LightSwitchApplication.Implementation.Category)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ApplicationData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public ApplicationData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IApplicationDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Category> CategoryEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Category>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Course> CourseEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Course>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Instructor> InstructorEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Instructor>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Section> SectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Section>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Enrollment> EnrollmentEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Enrollment>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Student> StudentEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Student>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CourseCategory> CourseCategoryEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CourseCategory>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new ApplicationDataEntityContainer();
        }
    
        internal sealed class ApplicationDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public ApplicationDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Category>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Course>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Instructor>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Section>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Enrollment>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Student>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CourseCategory>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IApplicationDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Categories_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Categories_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Categories_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCategories_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Category> EndCategories_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Categories_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Categories_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Categories_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCategories_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Category> EndCategories_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Categories_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Categories_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Categories_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCategories_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Category> EndCategories_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Courses_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Courses_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Courses_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Courses_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Courses_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Courses_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Courses_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Courses_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Courses_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Instructors_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInstructors_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Instructor> EndInstructors_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Instructors_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInstructors_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Instructor> EndInstructors_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Instructors_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Instructors_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInstructors_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Instructor> EndInstructors_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Sections_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Sections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Sections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSections_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Section> EndSections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Sections_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Sections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Sections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSections_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Section> EndSections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Sections_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Sections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Sections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Section> EndSections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Enrollments_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEnrollments_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Enrollment> EndEnrollments_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Enrollments_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEnrollments_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Enrollment> EndEnrollments_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Enrollments_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Enrollments_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEnrollments_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Enrollment> EndEnrollments_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Students_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Students_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Students_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStudents_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Student> EndStudents_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Students_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Students_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Students_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStudents_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Student> EndStudents_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Students_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Students_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Students_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStudents_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Student> EndStudents_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseCategories_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseCategory> EndCourseCategories_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseCategories_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseCategory> EndCourseCategories_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/CourseCategories_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseCategories_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseCategory> EndCourseCategories_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/AvailableSections", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/AvailableSectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/AvailableSectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAvailableSections(string frameworkOperators, global::System.Nullable<int> StudentId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Section> EndAvailableSections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SectionsByCategory", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SectionsByCategoryResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SectionsByCategoryDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSectionsByCategory(string frameworkOperators, global::System.Nullable<int> CategoryId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Section> EndSectionsByCategory(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Category))
            {
                return new global::LightSwitchApplication.Implementation.Category();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Course))
            {
                return new global::LightSwitchApplication.Implementation.Course();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Instructor))
            {
                return new global::LightSwitchApplication.Implementation.Instructor();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Section))
            {
                return new global::LightSwitchApplication.Implementation.Section();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Enrollment))
            {
                return new global::LightSwitchApplication.Implementation.Enrollment();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Student))
            {
                return new global::LightSwitchApplication.Implementation.Student();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CourseCategory))
            {
                return new global::LightSwitchApplication.Implementation.CourseCategory();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Category) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Category);
            }
            if (typeof(global::LightSwitchApplication.Course) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Course);
            }
            if (typeof(global::LightSwitchApplication.Instructor) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Instructor);
            }
            if (typeof(global::LightSwitchApplication.Section) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Section);
            }
            if (typeof(global::LightSwitchApplication.Enrollment) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Enrollment);
            }
            if (typeof(global::LightSwitchApplication.Student) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Student);
            }
            if (typeof(global::LightSwitchApplication.CourseCategory) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CourseCategory);
            }
            return null;
        }
    }
}
