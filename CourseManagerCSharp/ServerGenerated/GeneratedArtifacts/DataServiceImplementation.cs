//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Linq;

namespace LightSwitchApplication.Implementation
{
    
    [global::System.ServiceModel.DomainServices.Hosting.EnableClientAccess()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataDomainService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DomainService<global::ApplicationData.Implementation.ApplicationDataObjectContext>
    {
    
        public ApplicationDataDomainService() : base()
        {
        }
    
    #region Public Methods
    
    #region Category
    
        public void InsertCategory(global::ApplicationData.Implementation.Category entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Categories.AddObject(entity);
            }
        }
    
        public void UpdateCategory(global::ApplicationData.Implementation.Category currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Categories, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteCategory(global::ApplicationData.Implementation.Category entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Categories.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Course
    
        public void InsertCourse(global::ApplicationData.Implementation.Course entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Courses.AddObject(entity);
            }
        }
    
        public void UpdateCourse(global::ApplicationData.Implementation.Course currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Courses, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteCourse(global::ApplicationData.Implementation.Course entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Courses.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Instructor
    
        public void InsertInstructor(global::ApplicationData.Implementation.Instructor entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Instructors.AddObject(entity);
            }
        }
    
        public void UpdateInstructor(global::ApplicationData.Implementation.Instructor currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Instructors, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteInstructor(global::ApplicationData.Implementation.Instructor entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Instructors.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Section
    
        public void InsertSection(global::ApplicationData.Implementation.Section entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Sections.AddObject(entity);
            }
        }
    
        public void UpdateSection(global::ApplicationData.Implementation.Section currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Sections, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteSection(global::ApplicationData.Implementation.Section entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Sections.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Enrollment
    
        public void InsertEnrollment(global::ApplicationData.Implementation.Enrollment entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Enrollments.AddObject(entity);
            }
        }
    
        public void UpdateEnrollment(global::ApplicationData.Implementation.Enrollment currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Enrollments, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteEnrollment(global::ApplicationData.Implementation.Enrollment entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Enrollments.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Student
    
        public void InsertStudent(global::ApplicationData.Implementation.Student entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.Students.AddObject(entity);
            }
        }
    
        public void UpdateStudent(global::ApplicationData.Implementation.Student currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.Students, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteStudent(global::ApplicationData.Implementation.Student entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.Students.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region CourseCategory
    
        public void InsertCourseCategory(global::ApplicationData.Implementation.CourseCategory entity)
        {
            if (entity.EntityState != global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.ObjectStateManager.ChangeObjectState(entity, global::System.Data.EntityState.Added);
            }
            else
            {
                this.ObjectContext.CourseCategories.AddObject(entity);
            }
        }
    
        public void UpdateCourseCategory(global::ApplicationData.Implementation.CourseCategory currentEntity)
        {
            global::System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(this.ObjectContext.CourseCategories, currentEntity, this.ChangeSet.GetOriginal(currentEntity));
        }
    
        public void DeleteCourseCategory(global::ApplicationData.Implementation.CourseCategory entity)
        {
            if (entity.EntityState == global::System.Data.EntityState.Detached)
            {
                this.ObjectContext.CourseCategories.Attach(entity);
            }
    
            this.DeleteEntity(entity);
        }
    #endregion
    
    #region Queries
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Category>("Categories_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Category>("Categories_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Category>("Categories_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Course>("Courses_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Course>("Courses_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Course>("Courses_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Instructor>("Instructors_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Instructor>("Instructors_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Instructor>("Instructors_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Enrollment>("Enrollments_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Enrollment>("Enrollments_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Enrollment>("Enrollments_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Student>("Students_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Student>("Students_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Student>("Students_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_Single(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.CourseCategory>("CourseCategories_Single", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id)
        {
            return this.GetQuery<global::ApplicationData.Implementation.CourseCategory>("CourseCategories_SingleOrDefault", frameworkOperators, Id);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_All(string frameworkOperators)
        {
            return this.GetQuery<global::ApplicationData.Implementation.CourseCategory>("CourseCategories_All", frameworkOperators);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> AvailableSections(string frameworkOperators, global::System.Nullable<int> StudentId)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Section>("AvailableSections", frameworkOperators, StudentId);
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> SectionsByCategory(string frameworkOperators, global::System.Nullable<int> CategoryId)
        {
            return this.GetQuery<global::ApplicationData.Implementation.Section>("SectionsByCategory", frameworkOperators, CategoryId);
        }
    
    #endregion
    
        [global::System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects=false)]
        public int __GetEntitySetCanInformation(string entitySetName)
        {
            return base.GetEntitySetCanInformation(entitySetName);
        }
    
        [global::System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects=false)]
        public bool __CanExecuteOperation(string operationName)
        {
            return base.CanExecuteOperation(operationName);
        }
    
    #endregion
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService()
        {
            return new global::LightSwitchApplication.DataWorkspace().ApplicationData;
        }
    
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::ApplicationData.Implementation.ApplicationDataObjectContext>
    {
        public ApplicationDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Category>("Categories_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Category>("Categories_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> Categories_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Category> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Category>("[Categories]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Course>("Courses_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Course>("Courses_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> Courses_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Course> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Course>("[Courses]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Instructor>("Instructors_All"),
                (i) => (Id.HasValue && (i.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Instructor>("Instructors_All"),
                (i) => (Id.HasValue && (i.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> Instructors_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Instructor> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Instructor>("[Instructors]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_All"),
                (s) => (Id.HasValue && (s.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_All"),
                (s) => (Id.HasValue && (s.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> Sections_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Section>("[Sections]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Enrollment>("Enrollments_All"),
                (e) => (Id.HasValue && (e.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Enrollment>("Enrollments_All"),
                (e) => (Id.HasValue && (e.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> Enrollments_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Enrollment> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Enrollment>("[Enrollments]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Student>("Students_All"),
                (s) => (Id.HasValue && (s.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.Student>("Students_All"),
                (s) => (Id.HasValue && (s.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> Students_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Student> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.Student>("[Students]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_Single(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.CourseCategory>("CourseCategories_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_SingleOrDefault(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::ApplicationData.Implementation.CourseCategory>("CourseCategories_All"),
                (c) => (Id.HasValue && (c.Id == Id)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> CourseCategories_All()
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.CourseCategory> query;
            query = base.CreateQuery<global::ApplicationData.Implementation.CourseCategory>("[CourseCategories]").AsQueryable();
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> AvailableSections(global::System.Nullable<int> StudentId)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> query;
            query = this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_All");
            return query;
        }
    
        public global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> SectionsByCategory(global::System.Nullable<int> CategoryId)
        {
            global::System.Linq.IQueryable<global::ApplicationData.Implementation.Section> query;
            query = this.GetQuery<global::ApplicationData.Implementation.Section>("Sections_All");
            return query;
        }
    
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::ApplicationData.Implementation.Category))
            {
                return new global::ApplicationData.Implementation.Category();
            }
            if (type == typeof(global::ApplicationData.Implementation.Course))
            {
                return new global::ApplicationData.Implementation.Course();
            }
            if (type == typeof(global::ApplicationData.Implementation.Instructor))
            {
                return new global::ApplicationData.Implementation.Instructor();
            }
            if (type == typeof(global::ApplicationData.Implementation.Section))
            {
                return new global::ApplicationData.Implementation.Section();
            }
            if (type == typeof(global::ApplicationData.Implementation.Enrollment))
            {
                return new global::ApplicationData.Implementation.Enrollment();
            }
            if (type == typeof(global::ApplicationData.Implementation.Student))
            {
                return new global::ApplicationData.Implementation.Student();
            }
            if (type == typeof(global::ApplicationData.Implementation.CourseCategory))
            {
                return new global::ApplicationData.Implementation.CourseCategory();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::ApplicationData.Implementation.ApplicationDataObjectContext CreateObjectContext()
        {
            return new global::ApplicationData.Implementation.ApplicationDataObjectContext(base.GetEntityConnectionString(
                "_IntrinsicData", 
                "res://*/ApplicationData.csdl|res://*/ApplicationData.ssdl|res://*/ApplicationData.msl",
                "System.Data.SqlClient"));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Category))
            {
                return new global::ApplicationData.Implementation.Category();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Course))
            {
                return new global::ApplicationData.Implementation.Course();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Instructor))
            {
                return new global::ApplicationData.Implementation.Instructor();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Section))
            {
                return new global::ApplicationData.Implementation.Section();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Enrollment))
            {
                return new global::ApplicationData.Implementation.Enrollment();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Student))
            {
                return new global::ApplicationData.Implementation.Student();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CourseCategory))
            {
                return new global::ApplicationData.Implementation.CourseCategory();
            }
            return null;
        }
    
    #endregion
    
    }
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationDataService();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Category) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Category);
            }
            if (typeof(global::LightSwitchApplication.Course) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Course);
            }
            if (typeof(global::LightSwitchApplication.Instructor) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Instructor);
            }
            if (typeof(global::LightSwitchApplication.Section) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Section);
            }
            if (typeof(global::LightSwitchApplication.Enrollment) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Enrollment);
            }
            if (typeof(global::LightSwitchApplication.Student) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.Student);
            }
            if (typeof(global::LightSwitchApplication.CourseCategory) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.CourseCategory);
            }
            return null;
        }
    }
}

namespace ApplicationData.Implementation
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Category :
        global::LightSwitchApplication.Category.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Category.DetailsClass.IImplementation.CourseCategories
        {
            get
            {
                return this.CourseCategories;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Course :
        global::LightSwitchApplication.Course.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.Sections
        {
            get
            {
                return this.Sections;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.CourseCategories
        {
            get
            {
                return this.CourseCategories;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Instructor :
        global::LightSwitchApplication.Instructor.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Instructor.DetailsClass.IImplementation.Sections
        {
            get
            {
                return this.Sections;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.DataAnnotations.MetadataType(typeof(global::ApplicationData.Implementation.Section.Metadata))]
    public partial class Section :
        global::LightSwitchApplication.Section.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Section.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::ApplicationData.Implementation.Course)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Course");
                }
            }
        }
        
        partial void OnSection_CourseChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Course");
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Section.DetailsClass.IImplementation.Instructor
        {
            get
            {
                return this.Instructor;
            }
            set
            {
                this.Instructor = (global::ApplicationData.Implementation.Instructor)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Instructor");
                }
            }
        }
        
        partial void OnSection_InstructorChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Instructor");
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Section.DetailsClass.IImplementation.Enrollments
        {
            get
            {
                return this.Enrollments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
        
        internal class Metadata
        {
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Course Course { get; set; }
        
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Instructor Instructor { get; set; }
        
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.DataAnnotations.MetadataType(typeof(global::ApplicationData.Implementation.Enrollment.Metadata))]
    public partial class Enrollment :
        global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation.Section
        {
            get
            {
                return this.Section;
            }
            set
            {
                this.Section = (global::ApplicationData.Implementation.Section)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Section");
                }
            }
        }
        
        partial void OnEnrollment_SectionChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Section");
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Enrollment.DetailsClass.IImplementation.Student
        {
            get
            {
                return this.Student;
            }
            set
            {
                this.Student = (global::ApplicationData.Implementation.Student)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Student");
                }
            }
        }
        
        partial void OnEnrollment_StudentChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Student");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
        
        internal class Metadata
        {
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Section Section { get; set; }
        
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Student Student { get; set; }
        
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Student :
        global::LightSwitchApplication.Student.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Student.DetailsClass.IImplementation.Enrollments
        {
            get
            {
                return this.Enrollments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.DataAnnotations.MetadataType(typeof(global::ApplicationData.Implementation.CourseCategory.Metadata))]
    public partial class CourseCategory :
        global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::ApplicationData.Implementation.Course)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Course");
                }
            }
        }
        
        partial void OnCourseCategory_CourseChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Course");
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseCategory.DetailsClass.IImplementation.Category
        {
            get
            {
                return this.Category;
            }
            set
            {
                this.Category = (global::ApplicationData.Implementation.Category)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Category");
                }
            }
        }
        
        partial void OnCourseCategory_CategoryChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Category");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
        
        internal class Metadata
        {
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Course Course { get; set; }
        
            [global::System.ServiceModel.DomainServices.Server.Include]
            public global::ApplicationData.Implementation.Category Category { get; set; }
        
        }
    }
    
}

